/*!
 * yafs.js - Yet Another Fuzzy Search
 * License: GPL-3.0
 * Author: Andrea B Sferrazza
 * Repository: https://github.com/andreabsferrazza/yafs.js
 */
class yafs{static levenshtein(l,s){if("string"!=typeof l||"string"!=typeof s)return-1;if(l.length<=0||s.length<=0)return-2;if(l.length==s.length)return this.hamming(l,s);var a=Array.from({length:l.length+1});for(let t=0;t<=l.length;t++){a[t]=Array.from({length:s.length+1});for(let e=0;e<=s.length;e++)a[t][e]=0}for(let e=0;e<=l.length;e++)a[e][0]=e;for(let e=0;e<=s.length;e++)a[0][e]=e;for(let r=1;r<=l.length;r++)for(let n=1;n<=s.length;n++){let e=0,t=(l[r-1]!==s[n-1]&&(e=1),a[r-1][n-1]+e);a[r-1][n]<t&&(t=a[r-1][n]+1),a[r][n-1]<t&&(t=a[r][n-1]+1),a[r][n]=t}return a[l.length][s.length]}static hamming(t,n){if("string"!=typeof t||"string"!=typeof n)return-1;if(0===t.length||0===n.length)return-2;if(t.length!=n.length)return-3;let r=0;for(let e=0;e<t.length;e++)t[e]!=n[e]&&r++;return r}static search_levenshstein(r,l,s=0,e=0){if("string"!=typeof r||"string"!=typeof l||!Number.isInteger(s)||s<0||0===r.length||0===l.length)return{needle:r,haystack:l,threshold:s,distances:null,haystack_vector:null,found:-1};r=yafs.clean(r,e),l=yafs.clean(l,e);var a=r.split(" "),h=l.split(" ");let g=0;var f=Array.from({length:a.length});for(let t=0;t<a.length;t++){f[t]=Array.from({length:h.length});for(let e=0;e<h.length;e++)f[t][e]=0}var o=Array.from({length:h.length});for(let e=0;e<o.length;e++)o[e]=0;for(let n=0;n<a.length;n++)for(let t=0;t<h.length;t++){let e=0;var c=this.levenshtein(a[n],h[t]);if(c<0)return{needle:r,haystack:l,threshold:s,distances:f,haystack_vector:o,found:-2};c<=s&&(e=1),f[n][t]=c,0<e&&o[t]++,g+=e}return{needle:r,haystack:l,threshold:s,distances:f,haystack_vector:o,found:g}}static create_subsequence_pattern(t,e){var n=".{0,"+e+"}";let r=n;for(let e=0;e<t.length;e++)r=r+t[e]+n;return r+=n,new RegExp(r)}static subsequence_match(e,t,n,r=0){if("string"!=typeof e||"string"!=typeof t||!Number.isInteger(n)||!Number.isInteger(r)||n<0)return-1;if(e.length<=0||t.length<=0)return-2;0===r&&(e=e.toLowerCase(),t=t.toLowerCase()),e=e.replace(/[^a-zA-Z0-9']/g,"");r=yafs.create_subsequence_pattern(e,n);return null===t.match(r)?0:1}static search_subsequence(e,t,n){return"string"==typeof e&&"string"==typeof t&&0!==e.length&&0!==t.length&&Number.isInteger(n)?(n=yafs.subsequence_match(e,t,n))<0?{needle:e,haystack:t,found:-2}:{needle:e,haystack:t,found:n}:{needle:e,haystack:t,found:-1}}static search_numbers_included(e,t,r=1){if("string"!=typeof e||"string"!=typeof t||0===e.length||0===t.length)return{needle:e,haystack:t,haystack_vector:null,found:-1};e=yafs.clean(e),t=yafs.clean(t);var l=e.split(" "),s=t.split(" ");let a=0;var h=Array.from({length:s.length});for(let e=0;e<h.length;e++)h[e]=0;for(let n=0;n<l.length;n++)for(let t=0;t<s.length;t++){let e=0;0<(e=null!==l[n].match(/^[0-9]+$/)&&l.length<=r?0<yafs.searchIncluded(l[n],s[t]).found?1:0:e)&&h[t]++,a+=e}return{needle:e,haystack:t,max_keys:r,haystack_vector:h,found:a}}static searchIncluded(e,t){if("string"!=typeof e||"string"!=typeof t||0===e.length||0===t.length)return{needle:e,haystack:t,haystack_vector:null,found:-1};var n=e.split(" "),r=t.split(" "),l=0,s=Array.from({length:r.length});for(let e=0;e<s.length;e++)s[e]=0;for(let t=0;t<n.length;t++)for(let e=0;e<r.length;e++){this.levenshtein(n[t],r[e]);r[e].includes(n[t])&&(l++,s[e]++)}return{needle:e,haystack:t,haystack_vector:s,found:l}}static clean(e,t=1){return"string"!=typeof e?"":(e=(e=e.replace(/[^a-zA-Z0-9']/g," ")).replace(/[\s]{2,}/g," "),(e=0===t?e.toLowerCase():e).trim())}}"undefined"!=typeof module&&void 0!==module.exports?module.exports=yafs:window.yafs=yafs;