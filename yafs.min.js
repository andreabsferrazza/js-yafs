/*!
 * yafs.js - Yet Another Fuzzy Search
 * License: GPL-3.0
 * Author: Andrea B Sferrazza
 * Repository: https://github.com/andreabsferrazza/yafs.js
 */
class yafs{static levenshtein(r,a){if("string"!=typeof r||"string"!=typeof a)return-1;if(r.length<=0||a.length<=0)return-2;if(r.length==a.length)return this.hamming(r,a);var s=Array.from({length:r.length+1});for(let t=0;t<=r.length;t++){s[t]=Array.from({length:a.length+1});for(let e=0;e<=a.length;e++)s[t][e]=0}for(let e=0;e<=r.length;e++)s[e][0]=e;for(let e=0;e<=a.length;e++)s[0][e]=e;for(let l=1;l<=r.length;l++)for(let n=1;n<=a.length;n++){let e=0,t=(r[l-1]!==a[n-1]&&(e=1),s[l-1][n-1]+e);s[l-1][n]<t&&(t=s[l-1][n]+1),s[l][n-1]<t&&(t=s[l][n-1]+1),s[l][n]=t}return s[r.length][a.length]}static hamming(t,n){if("string"!=typeof t||"string"!=typeof n)return-1;if(0===t.length||0===n.length)return-2;if(t.length!=n.length)return-3;let l=0;for(let e=0;e<t.length;e++)t[e]!=n[e]&&l++;return l}static search_levenshtein({needle:l,haystack:r,threshold:a=0,case_sensitive:e=0}){if("string"!=typeof l||"string"!=typeof r||!Number.isInteger(a)||a<0||0===r.length)return{needle:l,haystack:r,threshold:a,distances:null,haystack_vector:null,found:-1};if(0===l.length)return{needle:l,haystack:r,threshold:a,distances:null,haystack_vector:null,found:0};l=yafs.clean(l,e),r=yafs.clean(r,e);var s=l.split(" "),h=r.split(" ");let o=0;var g=Array.from({length:s.length});for(let t=0;t<s.length;t++){g[t]=Array.from({length:h.length});for(let e=0;e<h.length;e++)g[t][e]=0}var f=Array.from({length:h.length});for(let e=0;e<f.length;e++)f[e]=0;for(let n=0;n<s.length;n++)for(let t=0;t<h.length;t++){let e=0;var c=this.levenshtein(s[n],h[t]);if(c<0)return{needle:l,haystack:r,threshold:a,distances:g,haystack_vector:f,found:-2};c<=a&&(e=1),g[n][t]=c,0<e&&f[t]++,o+=e}return{needle:l,haystack:r,threshold:a,distances:g,haystack_vector:f,found:o}}static create_subsequence_pattern(t,e){var n=".{0,"+e+"}";let l=n;for(let e=0;e<t.length;e++)l=l+t[e]+n;return l+=n,new RegExp(l)}static subsequence_match({needle:e,haystack:t,gaps_allowed:n=9999,case_sensitive:l=!1}){if("string"!=typeof e||"string"!=typeof t||!Number.isInteger(n)||"boolean"!=typeof l||n<0)return-1;if(e.length<0||t.length<0)return-2;if(0===e.length||0===t.length)return 0;!1===l&&(e=e.toLowerCase(),t=t.toLowerCase());l=yafs.create_subsequence_pattern(e,n);return null===t.match(l)?0:1}static search_subsequence({needle:e,haystack:t,gaps_allowed:n=9999,ignore_numbers:l=!1,ignore_letters:r=!1,only_letters_and_numbers:a=!0}){return"string"==typeof e&&"string"==typeof t&&0!==t.length&&Number.isInteger(n)?(!0===l&&(e=e.replace(/[0-9]/g,"")),!0===r&&(e=e.replace(/[a-zA-Z]/g,"")),0===(e=!0===a?e.replace(/[^a-zA-Z0-9']/g,""):e).length?{needle:e,haystack:t,found:0}:(r=yafs.subsequence_match({needle:e,haystack:t,gaps_allowed:n}))<0?{needle:e,haystack:t,found:r}:{needle:e,haystack:t,ignore_numbers:l,found:r}):{needle:e,haystack:t,found:-1}}static search_numbers_included({needle:e,haystack:t,max_keys:l=999}){if("string"!=typeof e||"string"!=typeof t||0===t.length)return{needle:e,haystack:t,haystack_vector:null,found:-1};if(0===e.length)return{needle:e,haystack:t,haystack_vector:null,found:0};e=yafs.clean(e),t=yafs.clean(t);var r=e.split(" "),a=t.split(" ");let s=0;var h=Array.from({length:a.length});for(let e=0;e<h.length;e++)h[e]=0;let o=0;for(let n=0;n<r.length;n++)for(let t=0;t<a.length;t++){let e=0;null!==r[n].match(/^[0-9]+$/)&&r.length<=l&&(o++,e=0<yafs.searchIncluded({needle:r[n],haystack:a[t]}).found?1:0),0<e&&h[t]++,s+=e}return{needle:e,haystack:t,max_keys:l,num_keys_found:o,haystack_vector:h,found:s}}static searchIncluded({needle:e,haystack:t}){if("string"!=typeof e||"string"!=typeof t||0===e.length||0===t.length)return{needle:e,haystack:t,haystack_vector:null,found:-1};var n=e.split(" "),l=t.split(" "),r=0,a=Array.from({length:l.length});for(let e=0;e<a.length;e++)a[e]=0;for(let t=0;t<n.length;t++)for(let e=0;e<l.length;e++){this.levenshtein(n[t],l[e]);l[e].includes(n[t])&&(r++,a[e]++)}return{needle:e,haystack:t,haystack_vector:a,found:r}}static clean(e,t=1){return"string"!=typeof e?"":(e=(e=e.replace(/[^a-zA-Z0-9']/g," ")).replace(/[\s]{2,}/g," "),(e=0===t?e.toLowerCase():e).trim())}}"undefined"!=typeof module&&void 0!==module.exports?module.exports=yafs:window.yafs=yafs;
